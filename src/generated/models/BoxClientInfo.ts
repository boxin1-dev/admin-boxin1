
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `BoxClientInfo` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model BoxClientInfo
 * 
 */
export type BoxClientInfoModel = runtime.Types.Result.DefaultSelection<Prisma.$BoxClientInfoPayload>

export type AggregateBoxClientInfo = {
  _count: BoxClientInfoCountAggregateOutputType | null
  _avg: BoxClientInfoAvgAggregateOutputType | null
  _sum: BoxClientInfoSumAggregateOutputType | null
  _min: BoxClientInfoMinAggregateOutputType | null
  _max: BoxClientInfoMaxAggregateOutputType | null
}

export type BoxClientInfoAvgAggregateOutputType = {
  id: number | null
}

export type BoxClientInfoSumAggregateOutputType = {
  id: number | null
}

export type BoxClientInfoMinAggregateOutputType = {
  id: number | null
  ip: string | null
  hostname: string | null
  city: string | null
  region: string | null
  country: string | null
  loc: string | null
  org: string | null
  timezone: string | null
  readme: string | null
  macAddress: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type BoxClientInfoMaxAggregateOutputType = {
  id: number | null
  ip: string | null
  hostname: string | null
  city: string | null
  region: string | null
  country: string | null
  loc: string | null
  org: string | null
  timezone: string | null
  readme: string | null
  macAddress: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type BoxClientInfoCountAggregateOutputType = {
  id: number
  ip: number
  hostname: number
  city: number
  region: number
  country: number
  loc: number
  org: number
  timezone: number
  readme: number
  macAddress: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type BoxClientInfoAvgAggregateInputType = {
  id?: true
}

export type BoxClientInfoSumAggregateInputType = {
  id?: true
}

export type BoxClientInfoMinAggregateInputType = {
  id?: true
  ip?: true
  hostname?: true
  city?: true
  region?: true
  country?: true
  loc?: true
  org?: true
  timezone?: true
  readme?: true
  macAddress?: true
  createdAt?: true
  updatedAt?: true
}

export type BoxClientInfoMaxAggregateInputType = {
  id?: true
  ip?: true
  hostname?: true
  city?: true
  region?: true
  country?: true
  loc?: true
  org?: true
  timezone?: true
  readme?: true
  macAddress?: true
  createdAt?: true
  updatedAt?: true
}

export type BoxClientInfoCountAggregateInputType = {
  id?: true
  ip?: true
  hostname?: true
  city?: true
  region?: true
  country?: true
  loc?: true
  org?: true
  timezone?: true
  readme?: true
  macAddress?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type BoxClientInfoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which BoxClientInfo to aggregate.
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BoxClientInfos to fetch.
   */
  orderBy?: Prisma.BoxClientInfoOrderByWithRelationInput | Prisma.BoxClientInfoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.BoxClientInfoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BoxClientInfos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BoxClientInfos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned BoxClientInfos
  **/
  _count?: true | BoxClientInfoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: BoxClientInfoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: BoxClientInfoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: BoxClientInfoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: BoxClientInfoMaxAggregateInputType
}

export type GetBoxClientInfoAggregateType<T extends BoxClientInfoAggregateArgs> = {
      [P in keyof T & keyof AggregateBoxClientInfo]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateBoxClientInfo[P]>
    : Prisma.GetScalarType<T[P], AggregateBoxClientInfo[P]>
}




export type BoxClientInfoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BoxClientInfoWhereInput
  orderBy?: Prisma.BoxClientInfoOrderByWithAggregationInput | Prisma.BoxClientInfoOrderByWithAggregationInput[]
  by: Prisma.BoxClientInfoScalarFieldEnum[] | Prisma.BoxClientInfoScalarFieldEnum
  having?: Prisma.BoxClientInfoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: BoxClientInfoCountAggregateInputType | true
  _avg?: BoxClientInfoAvgAggregateInputType
  _sum?: BoxClientInfoSumAggregateInputType
  _min?: BoxClientInfoMinAggregateInputType
  _max?: BoxClientInfoMaxAggregateInputType
}

export type BoxClientInfoGroupByOutputType = {
  id: number
  ip: string
  hostname: string | null
  city: string | null
  region: string | null
  country: string | null
  loc: string | null
  org: string | null
  timezone: string | null
  readme: string | null
  macAddress: string | null
  createdAt: Date
  updatedAt: Date
  _count: BoxClientInfoCountAggregateOutputType | null
  _avg: BoxClientInfoAvgAggregateOutputType | null
  _sum: BoxClientInfoSumAggregateOutputType | null
  _min: BoxClientInfoMinAggregateOutputType | null
  _max: BoxClientInfoMaxAggregateOutputType | null
}

type GetBoxClientInfoGroupByPayload<T extends BoxClientInfoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<BoxClientInfoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof BoxClientInfoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], BoxClientInfoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], BoxClientInfoGroupByOutputType[P]>
      }
    >
  >



export type BoxClientInfoWhereInput = {
  AND?: Prisma.BoxClientInfoWhereInput | Prisma.BoxClientInfoWhereInput[]
  OR?: Prisma.BoxClientInfoWhereInput[]
  NOT?: Prisma.BoxClientInfoWhereInput | Prisma.BoxClientInfoWhereInput[]
  id?: Prisma.IntFilter<"BoxClientInfo"> | number
  ip?: Prisma.StringFilter<"BoxClientInfo"> | string
  hostname?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  city?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  region?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  country?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  loc?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  org?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  timezone?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  readme?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  macAddress?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  createdAt?: Prisma.DateTimeFilter<"BoxClientInfo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"BoxClientInfo"> | Date | string
}

export type BoxClientInfoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  ip?: Prisma.SortOrder
  hostname?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrderInput | Prisma.SortOrder
  region?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  loc?: Prisma.SortOrderInput | Prisma.SortOrder
  org?: Prisma.SortOrderInput | Prisma.SortOrder
  timezone?: Prisma.SortOrderInput | Prisma.SortOrder
  readme?: Prisma.SortOrderInput | Prisma.SortOrder
  macAddress?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BoxClientInfoWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.BoxClientInfoWhereInput | Prisma.BoxClientInfoWhereInput[]
  OR?: Prisma.BoxClientInfoWhereInput[]
  NOT?: Prisma.BoxClientInfoWhereInput | Prisma.BoxClientInfoWhereInput[]
  ip?: Prisma.StringFilter<"BoxClientInfo"> | string
  hostname?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  city?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  region?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  country?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  loc?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  org?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  timezone?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  readme?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  macAddress?: Prisma.StringNullableFilter<"BoxClientInfo"> | string | null
  createdAt?: Prisma.DateTimeFilter<"BoxClientInfo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"BoxClientInfo"> | Date | string
}, "id">

export type BoxClientInfoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  ip?: Prisma.SortOrder
  hostname?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrderInput | Prisma.SortOrder
  region?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  loc?: Prisma.SortOrderInput | Prisma.SortOrder
  org?: Prisma.SortOrderInput | Prisma.SortOrder
  timezone?: Prisma.SortOrderInput | Prisma.SortOrder
  readme?: Prisma.SortOrderInput | Prisma.SortOrder
  macAddress?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.BoxClientInfoCountOrderByAggregateInput
  _avg?: Prisma.BoxClientInfoAvgOrderByAggregateInput
  _max?: Prisma.BoxClientInfoMaxOrderByAggregateInput
  _min?: Prisma.BoxClientInfoMinOrderByAggregateInput
  _sum?: Prisma.BoxClientInfoSumOrderByAggregateInput
}

export type BoxClientInfoScalarWhereWithAggregatesInput = {
  AND?: Prisma.BoxClientInfoScalarWhereWithAggregatesInput | Prisma.BoxClientInfoScalarWhereWithAggregatesInput[]
  OR?: Prisma.BoxClientInfoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.BoxClientInfoScalarWhereWithAggregatesInput | Prisma.BoxClientInfoScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"BoxClientInfo"> | number
  ip?: Prisma.StringWithAggregatesFilter<"BoxClientInfo"> | string
  hostname?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  city?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  region?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  country?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  loc?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  org?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  timezone?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  readme?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  macAddress?: Prisma.StringNullableWithAggregatesFilter<"BoxClientInfo"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"BoxClientInfo"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"BoxClientInfo"> | Date | string
}

export type BoxClientInfoCreateInput = {
  ip: string
  hostname?: string | null
  city?: string | null
  region?: string | null
  country?: string | null
  loc?: string | null
  org?: string | null
  timezone?: string | null
  readme?: string | null
  macAddress?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type BoxClientInfoUncheckedCreateInput = {
  id?: number
  ip: string
  hostname?: string | null
  city?: string | null
  region?: string | null
  country?: string | null
  loc?: string | null
  org?: string | null
  timezone?: string | null
  readme?: string | null
  macAddress?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type BoxClientInfoUpdateInput = {
  ip?: Prisma.StringFieldUpdateOperationsInput | string
  hostname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  org?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  readme?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  macAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BoxClientInfoUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ip?: Prisma.StringFieldUpdateOperationsInput | string
  hostname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  org?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  readme?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  macAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BoxClientInfoCreateManyInput = {
  id?: number
  ip: string
  hostname?: string | null
  city?: string | null
  region?: string | null
  country?: string | null
  loc?: string | null
  org?: string | null
  timezone?: string | null
  readme?: string | null
  macAddress?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type BoxClientInfoUpdateManyMutationInput = {
  ip?: Prisma.StringFieldUpdateOperationsInput | string
  hostname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  org?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  readme?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  macAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BoxClientInfoUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ip?: Prisma.StringFieldUpdateOperationsInput | string
  hostname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  loc?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  org?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  timezone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  readme?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  macAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BoxClientInfoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ip?: Prisma.SortOrder
  hostname?: Prisma.SortOrder
  city?: Prisma.SortOrder
  region?: Prisma.SortOrder
  country?: Prisma.SortOrder
  loc?: Prisma.SortOrder
  org?: Prisma.SortOrder
  timezone?: Prisma.SortOrder
  readme?: Prisma.SortOrder
  macAddress?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BoxClientInfoAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type BoxClientInfoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ip?: Prisma.SortOrder
  hostname?: Prisma.SortOrder
  city?: Prisma.SortOrder
  region?: Prisma.SortOrder
  country?: Prisma.SortOrder
  loc?: Prisma.SortOrder
  org?: Prisma.SortOrder
  timezone?: Prisma.SortOrder
  readme?: Prisma.SortOrder
  macAddress?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BoxClientInfoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ip?: Prisma.SortOrder
  hostname?: Prisma.SortOrder
  city?: Prisma.SortOrder
  region?: Prisma.SortOrder
  country?: Prisma.SortOrder
  loc?: Prisma.SortOrder
  org?: Prisma.SortOrder
  timezone?: Prisma.SortOrder
  readme?: Prisma.SortOrder
  macAddress?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BoxClientInfoSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}



export type BoxClientInfoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  ip?: boolean
  hostname?: boolean
  city?: boolean
  region?: boolean
  country?: boolean
  loc?: boolean
  org?: boolean
  timezone?: boolean
  readme?: boolean
  macAddress?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["boxClientInfo"]>

export type BoxClientInfoSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  ip?: boolean
  hostname?: boolean
  city?: boolean
  region?: boolean
  country?: boolean
  loc?: boolean
  org?: boolean
  timezone?: boolean
  readme?: boolean
  macAddress?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["boxClientInfo"]>

export type BoxClientInfoSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  ip?: boolean
  hostname?: boolean
  city?: boolean
  region?: boolean
  country?: boolean
  loc?: boolean
  org?: boolean
  timezone?: boolean
  readme?: boolean
  macAddress?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["boxClientInfo"]>

export type BoxClientInfoSelectScalar = {
  id?: boolean
  ip?: boolean
  hostname?: boolean
  city?: boolean
  region?: boolean
  country?: boolean
  loc?: boolean
  org?: boolean
  timezone?: boolean
  readme?: boolean
  macAddress?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type BoxClientInfoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "ip" | "hostname" | "city" | "region" | "country" | "loc" | "org" | "timezone" | "readme" | "macAddress" | "createdAt" | "updatedAt", ExtArgs["result"]["boxClientInfo"]>

export type $BoxClientInfoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "BoxClientInfo"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    ip: string
    hostname: string | null
    city: string | null
    region: string | null
    country: string | null
    loc: string | null
    org: string | null
    timezone: string | null
    readme: string | null
    macAddress: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["boxClientInfo"]>
  composites: {}
}

export type BoxClientInfoGetPayload<S extends boolean | null | undefined | BoxClientInfoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload, S>

export type BoxClientInfoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<BoxClientInfoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: BoxClientInfoCountAggregateInputType | true
  }

export interface BoxClientInfoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BoxClientInfo'], meta: { name: 'BoxClientInfo' } }
  /**
   * Find zero or one BoxClientInfo that matches the filter.
   * @param {BoxClientInfoFindUniqueArgs} args - Arguments to find a BoxClientInfo
   * @example
   * // Get one BoxClientInfo
   * const boxClientInfo = await prisma.boxClientInfo.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends BoxClientInfoFindUniqueArgs>(args: Prisma.SelectSubset<T, BoxClientInfoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one BoxClientInfo that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {BoxClientInfoFindUniqueOrThrowArgs} args - Arguments to find a BoxClientInfo
   * @example
   * // Get one BoxClientInfo
   * const boxClientInfo = await prisma.boxClientInfo.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends BoxClientInfoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, BoxClientInfoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first BoxClientInfo that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoFindFirstArgs} args - Arguments to find a BoxClientInfo
   * @example
   * // Get one BoxClientInfo
   * const boxClientInfo = await prisma.boxClientInfo.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends BoxClientInfoFindFirstArgs>(args?: Prisma.SelectSubset<T, BoxClientInfoFindFirstArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first BoxClientInfo that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoFindFirstOrThrowArgs} args - Arguments to find a BoxClientInfo
   * @example
   * // Get one BoxClientInfo
   * const boxClientInfo = await prisma.boxClientInfo.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends BoxClientInfoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, BoxClientInfoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more BoxClientInfos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all BoxClientInfos
   * const boxClientInfos = await prisma.boxClientInfo.findMany()
   * 
   * // Get first 10 BoxClientInfos
   * const boxClientInfos = await prisma.boxClientInfo.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const boxClientInfoWithIdOnly = await prisma.boxClientInfo.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends BoxClientInfoFindManyArgs>(args?: Prisma.SelectSubset<T, BoxClientInfoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a BoxClientInfo.
   * @param {BoxClientInfoCreateArgs} args - Arguments to create a BoxClientInfo.
   * @example
   * // Create one BoxClientInfo
   * const BoxClientInfo = await prisma.boxClientInfo.create({
   *   data: {
   *     // ... data to create a BoxClientInfo
   *   }
   * })
   * 
   */
  create<T extends BoxClientInfoCreateArgs>(args: Prisma.SelectSubset<T, BoxClientInfoCreateArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many BoxClientInfos.
   * @param {BoxClientInfoCreateManyArgs} args - Arguments to create many BoxClientInfos.
   * @example
   * // Create many BoxClientInfos
   * const boxClientInfo = await prisma.boxClientInfo.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends BoxClientInfoCreateManyArgs>(args?: Prisma.SelectSubset<T, BoxClientInfoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many BoxClientInfos and returns the data saved in the database.
   * @param {BoxClientInfoCreateManyAndReturnArgs} args - Arguments to create many BoxClientInfos.
   * @example
   * // Create many BoxClientInfos
   * const boxClientInfo = await prisma.boxClientInfo.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many BoxClientInfos and only return the `id`
   * const boxClientInfoWithIdOnly = await prisma.boxClientInfo.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends BoxClientInfoCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, BoxClientInfoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a BoxClientInfo.
   * @param {BoxClientInfoDeleteArgs} args - Arguments to delete one BoxClientInfo.
   * @example
   * // Delete one BoxClientInfo
   * const BoxClientInfo = await prisma.boxClientInfo.delete({
   *   where: {
   *     // ... filter to delete one BoxClientInfo
   *   }
   * })
   * 
   */
  delete<T extends BoxClientInfoDeleteArgs>(args: Prisma.SelectSubset<T, BoxClientInfoDeleteArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one BoxClientInfo.
   * @param {BoxClientInfoUpdateArgs} args - Arguments to update one BoxClientInfo.
   * @example
   * // Update one BoxClientInfo
   * const boxClientInfo = await prisma.boxClientInfo.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends BoxClientInfoUpdateArgs>(args: Prisma.SelectSubset<T, BoxClientInfoUpdateArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more BoxClientInfos.
   * @param {BoxClientInfoDeleteManyArgs} args - Arguments to filter BoxClientInfos to delete.
   * @example
   * // Delete a few BoxClientInfos
   * const { count } = await prisma.boxClientInfo.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends BoxClientInfoDeleteManyArgs>(args?: Prisma.SelectSubset<T, BoxClientInfoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more BoxClientInfos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many BoxClientInfos
   * const boxClientInfo = await prisma.boxClientInfo.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends BoxClientInfoUpdateManyArgs>(args: Prisma.SelectSubset<T, BoxClientInfoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more BoxClientInfos and returns the data updated in the database.
   * @param {BoxClientInfoUpdateManyAndReturnArgs} args - Arguments to update many BoxClientInfos.
   * @example
   * // Update many BoxClientInfos
   * const boxClientInfo = await prisma.boxClientInfo.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more BoxClientInfos and only return the `id`
   * const boxClientInfoWithIdOnly = await prisma.boxClientInfo.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends BoxClientInfoUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, BoxClientInfoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one BoxClientInfo.
   * @param {BoxClientInfoUpsertArgs} args - Arguments to update or create a BoxClientInfo.
   * @example
   * // Update or create a BoxClientInfo
   * const boxClientInfo = await prisma.boxClientInfo.upsert({
   *   create: {
   *     // ... data to create a BoxClientInfo
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the BoxClientInfo we want to update
   *   }
   * })
   */
  upsert<T extends BoxClientInfoUpsertArgs>(args: Prisma.SelectSubset<T, BoxClientInfoUpsertArgs<ExtArgs>>): Prisma.Prisma__BoxClientInfoClient<runtime.Types.Result.GetResult<Prisma.$BoxClientInfoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of BoxClientInfos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoCountArgs} args - Arguments to filter BoxClientInfos to count.
   * @example
   * // Count the number of BoxClientInfos
   * const count = await prisma.boxClientInfo.count({
   *   where: {
   *     // ... the filter for the BoxClientInfos we want to count
   *   }
   * })
  **/
  count<T extends BoxClientInfoCountArgs>(
    args?: Prisma.Subset<T, BoxClientInfoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], BoxClientInfoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a BoxClientInfo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends BoxClientInfoAggregateArgs>(args: Prisma.Subset<T, BoxClientInfoAggregateArgs>): Prisma.PrismaPromise<GetBoxClientInfoAggregateType<T>>

  /**
   * Group by BoxClientInfo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BoxClientInfoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends BoxClientInfoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: BoxClientInfoGroupByArgs['orderBy'] }
      : { orderBy?: BoxClientInfoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, BoxClientInfoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBoxClientInfoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the BoxClientInfo model
 */
readonly fields: BoxClientInfoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for BoxClientInfo.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__BoxClientInfoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the BoxClientInfo model
 */
export interface BoxClientInfoFieldRefs {
  readonly id: Prisma.FieldRef<"BoxClientInfo", 'Int'>
  readonly ip: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly hostname: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly city: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly region: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly country: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly loc: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly org: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly timezone: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly readme: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly macAddress: Prisma.FieldRef<"BoxClientInfo", 'String'>
  readonly createdAt: Prisma.FieldRef<"BoxClientInfo", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"BoxClientInfo", 'DateTime'>
}
    

// Custom InputTypes
/**
 * BoxClientInfo findUnique
 */
export type BoxClientInfoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * Filter, which BoxClientInfo to fetch.
   */
  where: Prisma.BoxClientInfoWhereUniqueInput
}

/**
 * BoxClientInfo findUniqueOrThrow
 */
export type BoxClientInfoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * Filter, which BoxClientInfo to fetch.
   */
  where: Prisma.BoxClientInfoWhereUniqueInput
}

/**
 * BoxClientInfo findFirst
 */
export type BoxClientInfoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * Filter, which BoxClientInfo to fetch.
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BoxClientInfos to fetch.
   */
  orderBy?: Prisma.BoxClientInfoOrderByWithRelationInput | Prisma.BoxClientInfoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for BoxClientInfos.
   */
  cursor?: Prisma.BoxClientInfoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BoxClientInfos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BoxClientInfos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of BoxClientInfos.
   */
  distinct?: Prisma.BoxClientInfoScalarFieldEnum | Prisma.BoxClientInfoScalarFieldEnum[]
}

/**
 * BoxClientInfo findFirstOrThrow
 */
export type BoxClientInfoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * Filter, which BoxClientInfo to fetch.
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BoxClientInfos to fetch.
   */
  orderBy?: Prisma.BoxClientInfoOrderByWithRelationInput | Prisma.BoxClientInfoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for BoxClientInfos.
   */
  cursor?: Prisma.BoxClientInfoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BoxClientInfos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BoxClientInfos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of BoxClientInfos.
   */
  distinct?: Prisma.BoxClientInfoScalarFieldEnum | Prisma.BoxClientInfoScalarFieldEnum[]
}

/**
 * BoxClientInfo findMany
 */
export type BoxClientInfoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * Filter, which BoxClientInfos to fetch.
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BoxClientInfos to fetch.
   */
  orderBy?: Prisma.BoxClientInfoOrderByWithRelationInput | Prisma.BoxClientInfoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing BoxClientInfos.
   */
  cursor?: Prisma.BoxClientInfoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BoxClientInfos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BoxClientInfos.
   */
  skip?: number
  distinct?: Prisma.BoxClientInfoScalarFieldEnum | Prisma.BoxClientInfoScalarFieldEnum[]
}

/**
 * BoxClientInfo create
 */
export type BoxClientInfoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * The data needed to create a BoxClientInfo.
   */
  data: Prisma.XOR<Prisma.BoxClientInfoCreateInput, Prisma.BoxClientInfoUncheckedCreateInput>
}

/**
 * BoxClientInfo createMany
 */
export type BoxClientInfoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many BoxClientInfos.
   */
  data: Prisma.BoxClientInfoCreateManyInput | Prisma.BoxClientInfoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * BoxClientInfo createManyAndReturn
 */
export type BoxClientInfoCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * The data used to create many BoxClientInfos.
   */
  data: Prisma.BoxClientInfoCreateManyInput | Prisma.BoxClientInfoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * BoxClientInfo update
 */
export type BoxClientInfoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * The data needed to update a BoxClientInfo.
   */
  data: Prisma.XOR<Prisma.BoxClientInfoUpdateInput, Prisma.BoxClientInfoUncheckedUpdateInput>
  /**
   * Choose, which BoxClientInfo to update.
   */
  where: Prisma.BoxClientInfoWhereUniqueInput
}

/**
 * BoxClientInfo updateMany
 */
export type BoxClientInfoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update BoxClientInfos.
   */
  data: Prisma.XOR<Prisma.BoxClientInfoUpdateManyMutationInput, Prisma.BoxClientInfoUncheckedUpdateManyInput>
  /**
   * Filter which BoxClientInfos to update
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * Limit how many BoxClientInfos to update.
   */
  limit?: number
}

/**
 * BoxClientInfo updateManyAndReturn
 */
export type BoxClientInfoUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * The data used to update BoxClientInfos.
   */
  data: Prisma.XOR<Prisma.BoxClientInfoUpdateManyMutationInput, Prisma.BoxClientInfoUncheckedUpdateManyInput>
  /**
   * Filter which BoxClientInfos to update
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * Limit how many BoxClientInfos to update.
   */
  limit?: number
}

/**
 * BoxClientInfo upsert
 */
export type BoxClientInfoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * The filter to search for the BoxClientInfo to update in case it exists.
   */
  where: Prisma.BoxClientInfoWhereUniqueInput
  /**
   * In case the BoxClientInfo found by the `where` argument doesn't exist, create a new BoxClientInfo with this data.
   */
  create: Prisma.XOR<Prisma.BoxClientInfoCreateInput, Prisma.BoxClientInfoUncheckedCreateInput>
  /**
   * In case the BoxClientInfo was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.BoxClientInfoUpdateInput, Prisma.BoxClientInfoUncheckedUpdateInput>
}

/**
 * BoxClientInfo delete
 */
export type BoxClientInfoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
  /**
   * Filter which BoxClientInfo to delete.
   */
  where: Prisma.BoxClientInfoWhereUniqueInput
}

/**
 * BoxClientInfo deleteMany
 */
export type BoxClientInfoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which BoxClientInfos to delete
   */
  where?: Prisma.BoxClientInfoWhereInput
  /**
   * Limit how many BoxClientInfos to delete.
   */
  limit?: number
}

/**
 * BoxClientInfo without action
 */
export type BoxClientInfoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BoxClientInfo
   */
  select?: Prisma.BoxClientInfoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BoxClientInfo
   */
  omit?: Prisma.BoxClientInfoOmit<ExtArgs> | null
}
